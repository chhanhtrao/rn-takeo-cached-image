{"version":3,"sources":["database.ts"],"names":["React","SQLite","enablePromise","database","openDatabase","Promise","resolve","reject","db","name","error","console","log","createMediaTable","then","transaction","tx","executeSql","useMediaDb","setDb","useState","useEffect","openDb"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAqC,6BAArC;AAEAA,MAAM,CAACC,aAAP,CAAqB,IAArB;AAEA,IAAIC,QAA+B,GAAG,IAAtC;;AAEA,MAAMC,YAAY,GAAG,MAAoB;AACvC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAMC,EAAE,GAAGP,MAAM,CAACG,YAAP,CACT;AACEK,MAAAA,IAAI,EAAE;AADR,KADS,EAIT,MAAM;AACJ,UAAIN,QAAQ,KAAK,IAAjB,EAAuB;AACrB,eAAOG,OAAO,CAACH,QAAD,CAAd;AACD,OAFD,MAEO;AACLA,QAAAA,QAAQ,GAAGK,EAAX;AACD;;AACDF,MAAAA,OAAO,CAACE,EAAD,CAAP;AACD,KAXQ,EAYTE,KAAK,IAAI;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAL,MAAAA,MAAM,CAACG,KAAD,CAAN;AACD,KAfQ,CAAX;AAiBD,GAlBM,CAAP;AAmBD,CApBD;;AAsBA,MAAMG,gBAAgB,GAAG,MAAoB;AAC3C,SAAO,IAAIR,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCH,IAAAA,YAAY,GAAGU,IAAf,CAAoBN,EAAE,IAAI;AACxBA,MAAAA,EAAE,CAACO,WAAH,CACGC,EAAD,IAAa;AACXA,QAAAA,EAAE,CAACC,UAAH,CACG;AACb;AACA;AACA;AACA;AACA,aANU,EAOE,EAPF;AASD,OAXH,EAYGP,KAAD,IAAgBH,MAAM,CAACG,KAAD,CAZxB,EAaE,MAAMJ,OAAO,CAACE,EAAD,CAbf;AAeD,KAhBD;AAiBD,GAlBM,CAAP;AAmBD,CApBD;;AAsBA,OAAO,MAAMU,UAAU,GAAG,MAAM;AAC9B,QAAM,CAACV,EAAD,EAAKW,KAAL,IAAcnB,KAAK,CAACoB,QAAN,EAApB;AACApB,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AACpBR,IAAAA,gBAAgB,GAAGC,IAAnB,CAAwBQ,MAAM,IAAIH,KAAK,CAACG,MAAD,CAAvC;AACD,GAFD;AAGA,SAAOd,EAAP;AACD,CANM","sourcesContent":["import React from 'react';\nimport SQLite, {SQLiteDatabase} from 'react-native-sqlite-storage';\n\nSQLite.enablePromise(true);\n\nlet database: SQLiteDatabase | null = null;\n\nconst openDatabase = (): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    const db = SQLite.openDatabase(\n      {\n        name: 'TakeoApp.sqlite',\n      },\n      () => {\n        if (database !== null) {\n          return resolve(database);\n        } else {\n          database = db;\n        }\n        resolve(db);\n      },\n      error => {\n        console.log('Open media database error');\n        reject(error);\n      },\n    );\n  });\n};\n\nconst createMediaTable = (): Promise<any> => {\n  return new Promise((resolve, reject) => {\n    openDatabase().then(db => {\n      db.transaction(\n        (tx: any) => {\n          tx.executeSql(\n            `CREATE TABLE IF NOT EXISTS \"media\" (\n            \"id\"\tINTEGER,\n            \"remote_uri\"\tTEXT NOT NULL,\n            \"local_uri\"\tTEXT NOT NULL,\n            PRIMARY KEY(\"id\" AUTOINCREMENT)\n          );`,\n            [],\n          );\n        },\n        (error: any) => reject(error),\n        () => resolve(db),\n      );\n    });\n  });\n};\n\nexport const useMediaDb = () => {\n  const [db, setDb] = React.useState();\n  React.useEffect(() => {\n    createMediaTable().then(openDb => setDb(openDb));\n  });\n  return db;\n};\n"]}